{
	"info": {
		"_postman_id": "00000000-0000-0000-0000-000000000000",
		"name": "Regression Happy Path",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17221433"
	},
	"item": [
		{
			"name": "Run (QA & Stage)",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "GET Account List",
							"item": [
								{
									"name": "Account/list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Acct/List, Owned Accounts\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying a list of accounts\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"account_number\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/account/list",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												"list"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GET Balance",
							"item": [
								{
									"name": "Account/balance, Standard",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/Balance, Standard\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": "1234567980",
													"type": "string",
													"description": "1045400114, 1234567980, 1003900113, 1018409019"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Account/balance, Acct Leading Spaces",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/Balance, Acct Leading Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": " 1234567980",
													"type": "string",
													"description": "1045400114, 1234567980, 1003900113, 1018409019"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Account/balance, Acct Trailing Spaces",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/Balance, Acct Trailing Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": "1234567980 ",
													"type": "string",
													"description": "1045400114, 1234567980, 1003900113, 1018409019"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GET History, 'is real-time' = false",
							"item": [
								{
									"name": "Acct/#/history, No Content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, querying a date range with no data\", function () {",
													"    pm.response.to.have.status(204);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 204 No Content\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?begin-date=2022-04-09&end-date=2022-04-10",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09"
												},
												{
													"key": "end-date",
													"value": "2022-04-10"
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Acct # Only, Standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history standard, Acct # only, must be run after transfer regression to populate history data for today\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-10",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Acct Leading Spaces",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history standard, Acct Leading Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-10",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": " 1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Acct Trailing Spaces",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history standard, Acct Trailing Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-10",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980 ",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Begin Date Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Begin Date Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?begin-date=2022-04-09",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09"
												},
												{
													"key": "end-date",
													"value": "2022-04-10",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Begin & End Date Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Begin & End Date Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?begin-date=2022-04-09&end-date=2022-04-13",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09"
												},
												{
													"key": "end-date",
													"value": "2022-04-13"
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Sort Order 'd' Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Sort Order 'd' Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?sort-order=d",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "d"
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Sort Order 'a' Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Sort Order 'a' Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?sort-order=a",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a"
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, 'is-real-time = false' Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, 'is-real-time = false' Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?is-real-time=false",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false"
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Page Size & Number Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Page Size & Number Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?page-number=1&page-size=100",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "1"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Page Size & Number Only, No Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Page Size & Number Only, No Content Expected\", function () {",
													"    pm.response.to.have.status(204);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 204 No Content, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?page-number=3&page-size=1000",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3"
												},
												{
													"key": "page-size",
													"value": "1000"
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Unique ID & Begin Date Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Unique ID & Begin Date Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?begin-date=2022-04-01&unique-id=94e266ca-6278-49aa-968c-a53a3ff3f5fb",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-01"
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "1000",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "94e266ca-6278-49aa-968c-a53a3ff3f5fb"
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Payment ID & Begin Date Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Payment ID & Begin Date Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?begin-date=2022-04-01&payment-id=M041I1456JFTPOFY",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-01"
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "false",
													"disabled": true
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "1000",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "94e266ca-6278-49aa-968c-a53a3ff3f5fb",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "M041I1456JFTPOFY"
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GET History, 'is real-time' = true",
							"item": [
								{
									"name": "Acct/#/history, Acct # Only, Standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history standard, Acct # only, must be run after transfer regression to populate history data for today\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?is-real-time=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-10",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "true"
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Sort Order 'd' Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Sort Order 'd' Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?sort-order=d&is-real-time=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "d"
												},
												{
													"key": "is-real-time",
													"value": "true"
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Sort Order 'a' Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Sort Order 'a' Only\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?sort-order=a&is-real-time=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a"
												},
												{
													"key": "is-real-time",
													"value": "true"
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "100",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Payment ID Only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Payment ID\", function () {",
													"    pm.response.to.have.status(204);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 204 No Content\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?is-real-time=true&payment-id=M041I1456JFTPOFY",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-01",
													"disabled": true
												},
												{
													"key": "end-date",
													"value": "2022-04-13",
													"disabled": true
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "true"
												},
												{
													"key": "page-number",
													"value": "3",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "1000",
													"disabled": true
												},
												{
													"key": "unique-id",
													"value": "94e266ca-6278-49aa-968c-a53a3ff3f5fb",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "M041I1456JFTPOFY"
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acct/#/history, Page Size & Number, Begin & End Date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET history, Page Size & Number, Begin & End Date\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
													"});",
													"",
													"pm.test(\"Response is 200 OK, displaying an account history\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"records\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:account-number/history?begin-date=2022-04-09&end-date=2022-04-13&is-real-time=true&page-number=300&page-size=100",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":account-number",
												"history"
											],
											"query": [
												{
													"key": "begin-date",
													"value": "2022-04-09"
												},
												{
													"key": "end-date",
													"value": "2022-04-13"
												},
												{
													"key": "sort-order",
													"value": "a",
													"disabled": true
												},
												{
													"key": "is-real-time",
													"value": "true"
												},
												{
													"key": "page-number",
													"value": "300"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "unique-id",
													"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
													"disabled": true
												},
												{
													"key": "payment-id",
													"value": "L09UL2218A9V5SCY",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "account-number",
													"value": "1234567980",
													"description": "1234567980"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GET Loan Balance",
							"item": [
								{
									"name": "Account/Loan/Balance, Standard",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/Loan/Balance, Standard\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account loan balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/loan/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"loan",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": "2016"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Account/Loan/Balance, Acct Leading Spaces",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/Loan/Balance, Account Leading Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account loan balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/loan/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"loan",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": " 2016"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Account/Loan/Balance, Acct Trailing Spaces",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/Loan/Balance, Account Trailing Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account loan balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/loan/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"loan",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": "2016 "
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GET CM Balance",
							"item": [
								{
									"name": "Account/Cash Manager/Balance, Standard",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/CM/Balance, Standard\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/cash-manager/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"cash-manager",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": "777777777",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Account/Cash Manager/Balance, Account Leading Spaces",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/CM/Balance, Account Leading Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/cash-manager/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"cash-manager",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": " 777777777",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Account/Cash Manager/Balance, Account Trailing Spaces",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account/CM/Balance, Account Trailing Spaces\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response is 200 OK, displaying an account balance\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"available_balance\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url}}/api/account/:accountNumber/cash-manager/balance",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"account",
												":accountNumber",
												"cash-manager",
												"balance"
											],
											"variable": [
												{
													"key": "accountNumber",
													"value": "777777777 ",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Connections",
					"item": [
						{
							"name": "Get Connections, standard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200 OK, displaying a list of Connections\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"count\");\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections+json",
										"description": "connections",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections.hateoas+json",
										"description": "connections hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts+json",
										"description": "third party contacts",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts.hateoas+json",
										"description": "third party contacts hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts+json",
										"description": "owned accounts",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts.hateoas+json",
										"description": "owned accounts hateoas",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/api/connections",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"connections"
									],
									"query": [
										{
											"key": "trade-id",
											"value": "263815",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "EUR",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Connections, third party",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200 OK, displaying a list of third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"records\");\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections+json",
										"description": "connections",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections.hateoas+json",
										"description": "connections hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts+json",
										"description": "third party contacts",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts.hateoas+json",
										"description": "third party contacts hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts+json",
										"description": "owned accounts",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts.hateoas+json",
										"description": "owned accounts hateoas",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/api/connections",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"connections"
									],
									"query": [
										{
											"key": "trade-id",
											"value": "263815",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "EUR",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Connections, owned",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200 OK, displaying a list of owned\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"records\");\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections+json",
										"description": "connections",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections.hateoas+json",
										"description": "connections hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts+json",
										"description": "third party contacts",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts.hateoas+json",
										"description": "third party contacts hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts+json",
										"description": "owned accounts",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts.hateoas+json",
										"description": "owned accounts hateoas",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/api/connections",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"connections"
									],
									"query": [
										{
											"key": "trade-id",
											"value": "263815",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "EUR",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Transfer",
					"item": [
						{
							"name": "acct/transfer/internal, Acct Leading Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/internal, Acct Number Leading Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Internal Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "6b0e8309-8a07-41bc-a98c-6fdcfcbdae73",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \" 1234567980\",\r\n  \"account_number_to\": \" 1067309011\",\r\n  \"currency\": \"USD\",\r\n  \"amount\": 0.01,\r\n  \"account_from_description2\": \"Em doing leading spaces test\",\r\n  \"account_to_description2\": \"Em doing leading spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/internal",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"internal"
									]
								}
							},
							"response": []
						},
						{
							"name": "acct/transfer/internal, Acct Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/internal, Acct Number Trailing Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Internal Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "6b0e8309-8a07-41bc-a98c-6fdcfcbdae73",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980 \",\r\n  \"account_number_to\": \"1067309011 \",\r\n  \"currency\": \"USD\",\r\n  \"amount\": 0.01,\r\n  \"account_from_description2\": \"Em doing trailing spaces test\",\r\n  \"account_to_description2\": \"Em doing trailing spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/internal",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"internal"
									]
								}
							},
							"response": []
						},
						{
							"name": "acct/transfer/internal, Currency Leading Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/internal, Currency Leading Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Internal Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "6b0e8309-8a07-41bc-a98c-6fdcfcbdae73",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"currency\": \" USD\",\r\n  \"amount\": 0.01,\r\n  \"account_from_description2\": \"Em doing currency leading spaces test\",\r\n  \"account_to_description2\": \"Em doing currency leading spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/internal",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"internal"
									]
								}
							},
							"response": []
						},
						{
							"name": "acct/transfer/internal, Currency Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/internal, Currency Trailing Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Internal Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"    let previousGuid = pm.response.headers.get(\"Idempotency-Key\")",
											"    pm.collectionVariables.set(\"Idempotency-Key\", previousGuid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "{{$guid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"currency\": \"USD \",\r\n  \"amount\": 0.01,\r\n  \"account_from_description2\": \"Em doing currency trailing spaces test\",\r\n  \"account_to_description2\": \"Em doing currency trailing spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/internal",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"internal"
									]
								}
							},
							"response": []
						},
						{
							"name": "acct/transfer/internal, Duplicate IK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/internal,Duplicate IK\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"New record not created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "{{Idempotency-Key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"currency\": \"USD \",\r\n  \"amount\": 0.01,\r\n  \"account_from_description2\": \"Em doing currency trailing spaces test\",\r\n  \"account_to_description2\": \"Em doing currency trailing spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/internal",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"internal"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/transfer/sen, Acct Leading Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/sen, Acct Leading Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Sen Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "f4d88916-72df-45a6-881e-c318d41004b7",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \" 1234567980\",\r\n  \"account_number_to\": \" 1067309011\",\r\n  \"amount\": 10,\r\n  \"currency\": \"USD\",\r\n  \"account_from_description2\": \"Em doing acct leading test\",\r\n  \"account_to_description2\": \"Em doing acct leading test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/sen",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"sen"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/transfer/sen, Acct Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/sen, Acct Trailing Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Sen Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "f4d88916-72df-45a6-881e-c318d41004b7",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980 \",\r\n  \"account_number_to\": \"1067309011 \",\r\n  \"amount\": 10,\r\n  \"currency\": \"USD\",\r\n  \"account_from_description2\": \"Em doing acct trailing spaces test\",\r\n  \"account_to_description2\": \"Em doing acct trailing spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/sen",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"sen"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/transfer/sen, Currency Leading Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/sen, Currency Leading Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Sen Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "f4d88916-72df-45a6-881e-c318d41004b7",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"amount\": 10,\r\n  \"currency\": \" USD\",\r\n  \"account_from_description2\": \"Em doing currency leading spaces test\",\r\n  \"account_to_description2\": \"Em doing currency leading spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/sen",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"sen"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/transfer/sen, Currency Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/sen, Currency Trailing Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"SEN Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"    let previousGuid = pm.response.headers.get(\"Idempotency-Key\")",
											"    pm.collectionVariables.set(\"Idempotency-Key\", previousGuid);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "f4d88916-72df-45a6-881e-c318d41004b7",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"amount\": 10,\r\n  \"currency\": \"USD \",\r\n  \"account_from_description2\": \"Em doing currency trailing spaces test\",\r\n  \"account_to_description2\": \"Em doing currency trailing spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/sen",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"sen"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/transfer/sen, Duplicate IK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"acct/transfer/sen, Duplicate IK\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Sen Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "{{Idempotency-Key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"amount\": 10,\r\n  \"currency\": \"USD \",\r\n  \"account_from_description2\": \"Em doing currency trailing spaces test\",\r\n  \"account_to_description2\": \"Em doing currency trailing spaces test\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/sen",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"sen"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payment",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "GET Payment",
									"item": [
										{
											"name": "Get Payment, payment_id standard",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET payment with payment_id\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200, displaying payment details\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error not message present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment/:payment-id",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment",
														":payment-id"
													],
													"variable": [
														{
															"key": "payment-id",
															"value": "L09790527G9T1ID9",
															"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payment, payment_id leading spaces",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET payment with payment_id with leading spaces\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200, displaying payment details\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error not message present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment/:payment-id",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment",
														":payment-id"
													],
													"variable": [
														{
															"key": "payment-id",
															"value": " L09790527G9T1ID9",
															"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payment, payment_id trailing spaces",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET payment with payment_id with trailing spaces\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200, displaying payment details\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error not message present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment/:payment-id",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment",
														":payment-id"
													],
													"variable": [
														{
															"key": "payment-id",
															"value": "L09790527G9T1ID9  ",
															"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "GET Payments",
									"item": [
										{
											"name": "Get Payments, Acct # & Date Range",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range that includes payment\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/18/2022&end-date=04/20/2022",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "asc",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct # & Date Range - Em Testing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range that includes payment\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/18/2022&end-date=04/20/2022",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "asc",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct # & Date Range, No Data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range that doesn't include payment\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 204 No Content, not displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).not.to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/09/2022&end-date=04/10/2022",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/09/2022"
														},
														{
															"key": "end-date",
															"value": "04/10/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "asc",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct Leading Spaces & Date Range Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number w Leading Spaces and Date Range that includes payment\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number= 1234567980&begin-date=04/18/2022&end-date=04/20/2022",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": " 1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "asc",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct Trailing Spaces & Date Range",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number w Trailing Spaces and Date Range that includes payment\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980 &begin-date=04/18/2022&end-date=04/20/2022",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980 "
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "asc",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct # & Date Range & Sort 'd'",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range and Sort Order 'd' only\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/18/2022&end-date=04/20/2022&sort-order=d",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "d"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct # & Date Range & Sort 'a'",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range and Sort Order 'a' Only\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/18/2022&end-date=04/20/2022&sort-order=a",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "100",
															"disabled": true
														},
														{
															"key": "page-number",
															"value": "1",
															"disabled": true
														},
														{
															"key": "sort-order",
															"value": "a"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct # & Date Range & pg size 1 & pg # 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range and Pg size 1 and Pg # 1\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/18/2022&end-date=04/20/2022&page-size=1&page-number=1",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "1"
														},
														{
															"key": "page-number",
															"value": "1"
														},
														{
															"key": "sort-order",
															"value": "a",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Payments, Acct # & Date & pg & Sort Order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"GET Payments, Account number and Date Range and Pg size 1 and Pg # 1 and Sort Order\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response is 200 OK, displaying payment info\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
															"});\r",
															"\r",
															"pm.test(\"error message not present\", function () {\r",
															"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
															"});\r",
															"\r",
															"pm.test(\"PIM is present\", function () {\r",
															"    var jsonData = JSON.parse(responseBody);\r",
															"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
															"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
															"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
															"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
															"});\r",
															"\r",
															"\r",
															"setTimeout(function(){}, [1500]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"type": "text",
														"value": "{{subscriptionKey}}"
													},
													{
														"key": "Ocp-Apim-Trace",
														"type": "text",
														"value": "true"
													},
													{
														"key": "X-Auth-Signature",
														"type": "text",
														"value": "{{signature}}"
													},
													{
														"key": "X-Auth-Nonce",
														"type": "text",
														"value": "{{nonce}}"
													},
													{
														"key": "X-Auth-Timestamp",
														"type": "text",
														"value": "{{date}}"
													},
													{
														"key": "X-Auth-Version",
														"type": "text",
														"value": "{{version}}"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=04/18/2022&end-date=04/20/2022&page-size=1&page-number=1&sort-order=a",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"payment"
													],
													"query": [
														{
															"key": "account-number",
															"value": "1234567980"
														},
														{
															"key": "begin-date",
															"value": "04/18/2022"
														},
														{
															"key": "end-date",
															"value": "04/20/2022"
														},
														{
															"key": "page-size",
															"value": "1"
														},
														{
															"key": "page-number",
															"value": "1"
														},
														{
															"key": "sort-order",
															"value": "a"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "POST",
							"item": [
								{
									"name": "Post Payment - Book to Book, no IK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment, Book to Book standard\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a077a6",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 10.01,\r\n\t\"originator_account_number\": \"4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"1067309011\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"made Counterparty\",\r\n\t\"beneficiary_street_address\": \"123 Rubik's Way\",\r\n\t\"beneficiary_city\": \"Austin\",\r\n    \"beneficiary_region\": \"TX\",\r\n\t\"beneficiary_postal\":\"73301\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - Book to Book, no IK, Orginator # Leading Spaces",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment, Book to Book, no IK, Orgin Acct# Leading Spaces\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a077a6",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 10.01,\r\n\t\"originator_account_number\": \" 4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"1067309011\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"made Counterparty\",\r\n\t\"beneficiary_street_address\": \"123 Rubik's Way\",\r\n\t\"beneficiary_city\": \"Austin\",\r\n    \"beneficiary_region\": \"TX\",\r\n\t\"beneficiary_postal\":\"73301\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - Book to Book, no IK, Orginator # Trailing Spaces",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment, Book to Book, no IK, Orgin Acct# Trailing Spaces\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a077a6",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 10.01,\r\n\t\"originator_account_number\": \"4400009902 \",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"1067309011\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"made Counterparty\",\r\n\t\"beneficiary_street_address\": \"123 Rubik's Way\",\r\n\t\"beneficiary_city\": \"Austin\",\r\n    \"beneficiary_region\": \"TX\",\r\n\t\"beneficiary_postal\":\"73301\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - Book to Book, 1st IK (IP)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment, 1st Book to Book w Idempotency Key on\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "{{$guid}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 10.01,\r\n\t\"originator_account_number\": \"4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"1067309011\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"made Counterparty\",\r\n\t\"beneficiary_street_address\": \"123 Rubik's Way\",\r\n\t\"beneficiary_city\": \"Austin\",\r\n    \"beneficiary_region\": \"TX\",\r\n\t\"beneficiary_postal\":\"73301\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - Book to Book, 2nd IK (IP)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment, 2nd identical Book to Book w Idempotency Key on\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"200 Returned, payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 10.01,\r\n\t\"originator_account_number\": \"4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"1067309011\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"made Counterparty\",\r\n\t\"beneficiary_street_address\": \"123 Rubik's Way\",\r\n\t\"beneficiary_city\": \"Austin\",\r\n    \"beneficiary_region\": \"TX\",\r\n\t\"beneficiary_postal\":\"73301\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - 2 Bank, Domestic, no IK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment - 2 Bank, Domestic, no IK\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 1,\r\n\t\"originator_account_number\": \"4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"123456789\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"hello QA Regression Controller!\",\r\n\t\"beneficiary_street_address\": \"222 Weinerschnitzle Lane\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"CA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"322271627\",\r\n\t\"beneficiary_bank_name\": \"JPMorgan Chase Bank\",\r\n\t\"beneficiary_bank_street_address\": \"1111 Polaris Parkway\",\r\n\t\"beneficiary_bank_city\": \"Columbus\",\r\n\t\"beneficiary_bank_region\": \"OH\",\r\n    \"beneficiary_bank_postal\": \"43240\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - 2 Bank, International, no IK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment - 2 Bank, International, no IK\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\":1.5,\r\n\t\"originator_account_number\": \"5091010001\",\r\n\t\"sending_currency\": \"EUR\",\r\n\t\"beneficiary_bank_account_number\": \"1045464899665\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"Hocus Pocus\",\r\n\t\"beneficiary_street_address\": \"1670 Great Road\",\r\n\t\"beneficiary_city\": \"Providence\",\r\n    \"beneficiary_region\": \"RI\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"beneficiary_bank_type\": \"SWIFT\",\r\n\t\"beneficiary_bank_routing_id\": \"SRLGGB2L\",\r\n\t\"beneficiary_bank_name\": \"Starling Bank Ltd\",\r\n\t\"beneficiary_bank_street_address\": \"3rd Floor, 2 Finsbury Avenue\",\r\n\t\"beneficiary_bank_city\": \"London\",\r\n\t\"beneficiary_bank_region\": \"England\",\r\n    \"beneficiary_bank_postal\": \"EC2M 2PP\",\r\n    \"beneficiary_bank_country_code\": \"GB\",\r\n    \"originator_to_beneficiary_info\": \"Witchery Goods\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - 3 Bank, Domestic ABA, no IK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment - 3 Bank, Domestic ABA, no IK\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 1,\r\n\t\"originator_account_number\": \"4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"Hello World\",\r\n\t\"beneficiary_street_address\": \"123 bene address\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n\t\"beneficiary_postal\":\"12345\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"071006486\",\r\n\t\"beneficiary_bank_name\": \"THE PRIVATEBANK AND TRUST COMPANY\",\r\n\t\"beneficiary_bank_street_address\": \"70 W MADISON SUITE 200\",\r\n\t\"beneficiary_bank_city\": \"Chicago\",\r\n\t\"beneficiary_bank_region\": \"IL\",\r\n    \"beneficiary_bank_postal\": \"60602\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"Mic Check\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - 3 Bank, Intl. SWIFT, USD, no IK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment - 3 Bank, International SWIFT, USD, no IK\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 2,\r\n\t\"originator_account_number\": \"4400009902\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"NL85INGB4031638493\",\r\n    \"beneficiary_bank_account_is_iban\": true,\r\n\t\"beneficiary_name\": \"Goodday Sunshine\",\r\n\t\"beneficiary_street_address\": \"31 Rue Cambon\",\r\n\t\"beneficiary_city\": \"Paris\",\r\n    \"beneficiary_region\": \"France\",\r\n\t\"beneficiary_postal\":\"75001\",\r\n    \"beneficiary_country_code\": \"FR\",\r\n    \"beneficiary_bank_type\": \"SWIFT\",\r\n\t\"beneficiary_bank_routing_id\": \"INGBNL2A\",\r\n\t\"beneficiary_bank_name\": \"ING Bank N.V.\",\r\n\t\"beneficiary_bank_street_address\": \"41 AVENUE DE L'OPERA\",\r\n\t\"beneficiary_bank_city\": \"Paris\",\r\n\t\"beneficiary_bank_region\": \"France\",\r\n    \"beneficiary_bank_postal\": \"75002\",\r\n    \"beneficiary_bank_country_code\": \"Fr\",\r\n    \"intermediary_bank_type\":\"SWIFT\",\r\n\t\"intermediary_bank_routing_id\": \"AIGIUS33\",\r\n\t\"intermediary_bank_name\": \"AIG INTERNATIONAL INC.\",\r\n\t\"intermediary_bank_street_address\": \"50 DANBURY ROAD\",\r\n\t\"intermediary_bank_city\": \"Wilton\",\r\n\t\"intermediary_bank_region\": \"CT\",\r\n\t\"intermediary_bank_postal\": \"06897\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"TC 19064\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Payment - 3 Bank, Intl. SWIFT, EUR, no IK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST Payment - 3 Bank, International SWIFT, EUR, no IK\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"201 Returned, Payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 2,\r\n\t\"originator_account_number\": \"5091010001\",\r\n\t\"sending_currency\": \"EUR\",\r\n\t\"beneficiary_bank_account_number\": \"NL85INGB4031638493\",\r\n    \"beneficiary_bank_account_is_iban\": true,\r\n\t\"beneficiary_name\": \"Goodday Sunshine\",\r\n\t\"beneficiary_street_address\": \"31 Rue Cambon\",\r\n\t\"beneficiary_city\": \"Paris\",\r\n    \"beneficiary_region\": \"France\",\r\n\t\"beneficiary_postal\":\"75001\",\r\n    \"beneficiary_country_code\": \"FR\",\r\n    \"beneficiary_bank_type\": \"SWIFT\",\r\n\t\"beneficiary_bank_routing_id\": \"INGBNL2A\",\r\n\t\"beneficiary_bank_name\": \"ING Bank N.V.\",\r\n\t\"beneficiary_bank_street_address\": \"41 AVENUE DE L'OPERA\",\r\n\t\"beneficiary_bank_city\": \"Paris\",\r\n\t\"beneficiary_bank_region\": \"France\",\r\n    \"beneficiary_bank_postal\": \"75002\",\r\n    \"beneficiary_bank_country_code\": \"Fr\",\r\n    \"intermediary_bank_type\":\"SWIFT\",\r\n\t\"intermediary_bank_routing_id\": \"AIGIUS33\",\r\n\t\"intermediary_bank_name\": \"AIG INTERNATIONAL INC.\",\r\n\t\"intermediary_bank_street_address\": \"50 DANBURY ROAD\",\r\n\t\"intermediary_bank_city\": \"Wilton\",\r\n\t\"intermediary_bank_region\": \"CT\",\r\n\t\"intermediary_bank_postal\": \"06897\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"TC 19064\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Sequential payment requests",
							"item": [
								{
									"name": "POST payment for sequential - 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"POST payment for sequential - 1\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    let json = pm.response.json()\r",
													"    let timeStamp = json.payment_timestamp;\r",
													"    pm.collectionVariables.set(\"sequential_test_payment_id\", json.payment_id);\r",
													"    pm.collectionVariables.set(\"sequential_test_payment_timestamp\", timeStamp);\r",
													"});\r",
													"\r",
													"setTimeout(function(){}, [1000]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 1,\r\n\t\"originator_account_number\": \"1234567980\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"123\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"hello eeee\",\r\n\t\"beneficiary_street_address\": \"222 Weinerschnitzle Lane\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"CA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"322271627\",\r\n\t\"beneficiary_bank_name\": \"JPMorgan Chase Bank\",\r\n\t\"beneficiary_bank_street_address\": \"1111 Polaris Parkway\",\r\n\t\"beneficiary_bank_city\": \"Columbus\",\r\n\t\"beneficiary_bank_region\": \"OH\",\r\n    \"beneficiary_bank_postal\": \"43240\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"sequential payment\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET payment for sequential - 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET payment for sequential - 2\", function () {\r",
													"    pm.response.to.have.status(200); \r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"    pm.expect(pm.response.json()[0].payment_status).to.equal(\"Pre-Approval\");\r",
													"});\r",
													"\r",
													"setTimeout(function(){}, [1000]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "{{sequential_test_payment_id}}",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH payment approve for sequential - 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"PATCH payment approve for sequential - 3\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"setTimeout(function(){}, [1000]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "07c90cd0-ed56-4727-8e69-db6a37260f51",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"action\": \"approve\",\r\n    \"timestamp\": \"{{sequential_test_payment_timestamp}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment/:mid",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":mid"
											],
											"variable": [
												{
													"key": "mid",
													"value": "{{sequential_test_payment_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET payment for sequential - 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"GET payment for sequential - 4\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"    pm.expect(pm.response.json()[0].payment_status).to.equal(\"In-Progress\");\r",
													"});\r",
													"\r",
													"setTimeout(function(){}, [1000]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "{{sequential_test_payment_id}}",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Webhook",
					"item": [
						{
							"name": "GET by sub, general",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by sub - 200 if webhook exist, 204 if no webhook\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
											"});",
											"",
											"//pm.test(\"200 if webhook exist, 204 if no webhook\", function () {",
											"  //  pm.expect(pm.response.text()).to.include.oneOf(\"records\",\"\");",
											"//});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/webhook/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"webhook",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webhook, URL only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create webhook, URL only\", function () {",
											"    pm.response.to.have.status(201);",
											"    let json = pm.response.json()",
											"    pm.collectionVariables.set(\"sequential_test_webhook_id1\", json.web_hook_id);",
											"    pm.expect(json.web_hook_url).to.eql(\"https://google.com\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \"1234567980\",\r\n  \"Description\": \"PM test - Create webhook, URL only, 2\",\r\n  \"Web_Hook_Url\": \"https://google.com\",\r\n  \"Emails\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webhook, Email only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create webhook, Email only\", function () {",
											"    pm.response.to.have.status(201);",
											"    let json = pm.response.json()",
											"    pm.collectionVariables.set(\"sequential_test_webhook_id2\", json.web_hook_id);",
											"    pm.expect(json.emails).to.eql(\"someone@made.com\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \"1234567980\",\r\n  \"Description\": \"PM test - Create webhook, Email only, 2\",\r\n  \"Web_Hook_Url\": \"\",\r\n  \"Emails\": \"someone@made.com\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webhook, Email and URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create webhook, Email and URL\", function () {",
											"    pm.response.to.have.status(201);",
											"    let json = pm.response.json()",
											"    pm.collectionVariables.set(\"sequential_test_webhook_id3\", json.web_hook_id);",
											"    pm.expect(json.emails).to.eql(\"someone@made.com, somebody@made.com\");",
											"    pm.expect(json.web_hook_url).to.eql(\"https://google.com\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \"1234567980\",\r\n  \"Description\": \"PM test - Create webhook, Email and URL, 3\",\r\n  \"Web_Hook_Url\": \"https://google.com\",\r\n  \"Emails\": \"someone@made.com, somebody@made.com\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webhook, Acct Leading Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create webhook, Account Leading Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"    let json = pm.response.json()",
											"    pm.collectionVariables.set(\"sequential_test_webhook_id4\", json.web_hook_id);",
											"    pm.expect(json.account_number).to.eql(\"1234567980\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \" 1234567980\",\r\n  \"Description\": \"PM test - Create webhook, Account Leading Spaces, 4\",\r\n  \"Web_Hook_Url\": \"https://google.com\",\r\n  \"Emails\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webhook, Acct Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create webhook, Account Trailing Spaces\", function () {",
											"    pm.response.to.have.status(201);",
											"    let json = pm.response.json()",
											"    pm.collectionVariables.set(\"sequential_test_webhook_id5\", json.web_hook_id);",
											"    pm.expect(json.account_number).to.eql(\"1234567980\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \"1234567980 \",\r\n  \"Description\": \"PM test - Create webhook, Account Trailing Spaces, 5\",\r\n  \"Web_Hook_Url\": \"https://google.com\",\r\n  \"Emails\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webhook, 2 Emails only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create webhook, 2 Emails only\", function () {",
											"    pm.response.to.have.status(201);",
											"    let json = pm.response.json()",
											"    pm.collectionVariables.set(\"sequential_test_webhook_id10\", json.web_hook_id);",
											"    pm.expect(json.emails).to.eql(\"someone@made.com, somebody@made.com\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \"1234567980\",\r\n  \"Description\": \"PM test - Create webhook, 2 Emails only, 10\",\r\n  \"Web_Hook_Url\": \"\",\r\n  \"Emails\": \"someone@made.com, somebody@made.com\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET by web_hook_id1, w. URL only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by web_hook_id1\", function () {",
											"    pm.response.to.have.status(200);",
											"    let json = pm.response.json()",
											"    pm.expect(pm.response.text()).to.include(\"description\");",
											"    pm.expect(json.web_hook_url).to.eql(\"https://google.com\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": "{{sequential_test_webhook_id1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET by web_hook_id2, w. Email Only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by web_hook_id2, id w. Email Only\", function () {",
											"    pm.response.to.have.status(200);",
											"    let json = pm.response.json()",
											"    pm.expect(pm.response.text()).to.include(\"description\");",
											"    pm.expect(json.emails).to.include(\"someone@made.com\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": " {{sequential_test_webhook_id2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET by web_hook_id3, w. Email and URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by web_hook_id3, w. Email and URL\", function () {",
											"    pm.response.to.have.status(200);",
											"    let json = pm.response.json()",
											"    pm.expect(pm.response.text()).to.include(\"description\");",
											"    pm.expect(json.web_hook_url).to.eql(\"https://google.com\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": "{{sequential_test_webhook_id3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET by web_hook_id4, w. Acct Leading Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by web_hook_id4. Acct Leading Spaces\", function () {",
											"    pm.response.to.have.status(200);",
											"    let json = pm.response.json()",
											"    pm.expect(pm.response.text()).to.include(\"description\");",
											"    pm.expect(json.web_hook_url).to.eql(\"https://google.com\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": "{{sequential_test_webhook_id4}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET by web_hook_id5, w. Acct Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by web_hook_id5, Acct Trailing Spaces\", function () {",
											"    pm.response.to.have.status(200);",
											"    let json = pm.response.json()",
											"    pm.expect(pm.response.text()).to.include(\"description\");",
											"    pm.expect(json.web_hook_url).to.eql(\"https://google.com\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": "{{sequential_test_webhook_id5}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET by web_hook_id10, id w. 2 Emails only",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"GET by web_hook_id10, w. 2 Emails Only\", function () {",
											"    pm.response.to.have.status(200);",
											"    let json = pm.response.json()",
											"    pm.expect(pm.response.text()).to.include(\"description\");",
											"    pm.expect(json.emails).to.include(\"someone@made.com\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": "{{sequential_test_webhook_id10}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE by web_hook_id1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"DELETE by web_hook_id1\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "{{sequential_test_webhook_id1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE by web_hook_id2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"DELETE by web_hook_id2\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "{{sequential_test_webhook_id2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE by web_hook_id3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"DELETE by web_hook_id3\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "{{sequential_test_webhook_id3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE by web_hook_id4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"DELETE by web_hook_id4\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "{{sequential_test_webhook_id4}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE by web_hook_id5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"DELETE by web_hook_id5\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "{{sequential_test_webhook_id5}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE by web_hook_id10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"DELETE by web_hook_id10\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "{{sequential_test_webhook_id10}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "FX (QA)",
			"item": [
				{
					"name": "1. Post Quote/Order",
					"item": [
						{
							"name": "Post Quote, RFQ",
							"item": [
								{
									"name": "Post Quote, RFQ - indicative only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ happy path, indicative only\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing indicative only\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"not authorized to perform\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"4400009902\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Buy, send to owned acct",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Buy, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id1\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as owned\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Buy, send to third party",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Buy, send to third party\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id2\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Buy, send to third party crypto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Buy, send to third party crypto\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id3\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party crypto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Crypto\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 3,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Sell, send to owned acct",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Sell, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id4\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as owned\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": false,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Post Trade",
							"item": [
								{
									"name": "Post Trade - Quote_id1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													" \r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id1}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade?",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											],
											"query": [
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Trade - Quote_id2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id2}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Trade - Quote_id3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id3}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Trade - Quote_id4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_trade_id\", json.trade_id);\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id4}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Post Quote, Market Order",
							"item": [
								{
									"name": "Post Quote, Market Order - Buy, send to owned account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order, Buy, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing owned account\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Buy, send to third party , ver 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Buy, send to third party\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_trade_id2\", json.trade_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Buy, send to third party, ver 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Buy, send to third party\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_trade_id3\", json.trade_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Buy, send to third party crypto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Buy, send to third party crypto\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party crypto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Crypto\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 3,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Sell, send to owned acct Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Sell, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as owned\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": false,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "Post folder contains:\n 1) Post Quote\n 2) Post Trade\n 3) Post FX Payment"
				},
				{
					"name": "2. Get Trade(s)",
					"item": [
						{
							"name": "Get Trade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade/:trade-Id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade",
										":trade-Id"
									],
									"variable": [
										{
											"key": "trade-Id",
											"value": "{{sequential_test_trade_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Standard, Source 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=6/20/2022&sort-order=d&source=1&end-Date=7/14/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "6/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "1",
											"description": "1 for partner, 2 for portal"
										},
										{
											"key": "end-Date",
											"value": "7/14/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Standard, Source 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=08/01/2022&sort-order=d&source=2&end-Date=08/03/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "08/01/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal"
										},
										{
											"key": "end-Date",
											"value": "08/03/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Standard Source 1&2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=7/20/2022&sort-order=d&end-Date=8/05/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "7/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "8/05/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Acct Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=6/20/2022&sort-order=d&end-Date=7/14/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "6/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "7/14/2022"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Get folder contains:\n 1) Get Trade\n 2) Get Trades\n 3) Get Payment Instructions"
				},
				{
					"name": "3. Post FX Payment",
					"item": [
						{
							"name": "fx payment, ad hoc, trade-id w trailing spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"FX payment, Ad-Hoc, Trade-id with Trailing Spaces\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"201 Returned, Payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id2}} \",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for purpose of pmt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id4\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, ad hoc, purpose of payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id4}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for currency trailing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id5\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, ad hoc, sending currency w trailing spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"FX payment, Ad-Hoc, Sending Currency with Trailing Spaces\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"201 Returned, Payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id5}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR \",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for currency leading",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id6\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, ad hoc, sending currency w leading spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"FX payment, Ad-Hoc, Sending Currency with Leading Spaces\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"201 Returned, Payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id6}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \" EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for Connections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id7\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, Connections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id7}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4. Get Payment instructions",
					"item": [
						{
							"name": "Payment Instructions, standard w trade-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Success Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions+json",
										"description": "paymentinstructions",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions.hateoas+json",
										"description": "paymentinstructions+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/payment/instructions/:trade-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										"instructions",
										":trade-id"
									],
									"variable": [
										{
											"key": "trade-id",
											"value": "{{sequential_test_trade_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Payment Instructions, trade-id w trailing spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Success Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions+json",
										"description": "paymentinstructions",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions.hateoas+json",
										"description": "paymentinstructions+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/payment/instructions/:trade-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										"instructions",
										":trade-id"
									],
									"variable": [
										{
											"key": "trade-id",
											"value": "{{sequential_test_trade_id}} "
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "FX (Stage)",
			"item": [
				{
					"name": "1. Post Quote/Order",
					"item": [
						{
							"name": "Post Quote, RFQ",
							"item": [
								{
									"name": "Post Quote, RFQ - indicative only",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ happy path, indicative only\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing indicative only\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"not authorized to perform\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"4400009902\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Buy, send to owned acct",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Buy, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id1\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as owned\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Buy, send to third party",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Buy, send to third party\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id2\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Buy, send to third party crypto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Buy, send to third party crypto\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id3\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party crypto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Crypto\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 3,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, RFQ - Sell, send to owned acct",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"RFQ Sell, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_quote_id4\", json.quote_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as owned\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error message not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": false,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Post Trade",
							"item": [
								{
									"name": "Post Trade - Quote_id1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													" \r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id1}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade?",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											],
											"query": [
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Trade - Quote_id2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id2}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Trade - Quote_id3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id3}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Trade - Quote_id4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_trade_id\", json.trade_id);\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution.hateoas+json",
												"type": "text",
												"description": "tradeexecution + hateoas"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.tradeexecution+json",
												"description": "tradeexecution",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id4}}\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/fx/trade",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"trade"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Post Quote, Market Order",
							"item": [
								{
									"name": "Post Quote, Market Order - Buy, send to owned account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order, Buy, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing owned account\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Buy, send to third party , ver 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Buy, send to third party\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_trade_id2\", json.trade_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Buy, send to third party, ver 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Buy, send to third party\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    let json = pm.response.json()\r",
													"    pm.collectionVariables.set(\"sequential_test_trade_id3\", json.trade_id);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Buy, send to third party crypto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Buy, send to third party crypto\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as third party crypto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Crypto\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 3,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Quote, Market Order - Sell, send to owned acct Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Market Order Sell, send to owned account\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is 200, showing account type as owned\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Owned\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.made.quote.hateoas+json",
												"type": "text",
												"description": "quote + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder.hateoas+json",
												"type": "text",
												"description": "trade + hateoas",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text",
												"description": "standard json",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.quote+json",
												"description": "quote",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.made.marketorder+json",
												"description": "trade",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 1,\r\n    \"is_buy\": false,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/fx/quote",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"fx",
												"quote"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "Post folder contains:\n 1) Post Quote\n 2) Post Trade\n 3) Post FX Payment"
				},
				{
					"name": "2. Get Trade(s)",
					"item": [
						{
							"name": "Get Trade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade/:trade-Id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade",
										":trade-Id"
									],
									"variable": [
										{
											"key": "trade-Id",
											"value": "{{sequential_test_trade_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Standard, Source 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=6/20/2022&sort-order=d&end-Date=7/14/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "6/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "7/14/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Standard, Source 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=6/20/2022&sort-order=d&end-Date=07/14/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "6/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "07/14/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Standard Source 1&2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=6/20/2022&sort-order=d&end-Date=7/14/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "6/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "7/14/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades, Acct Trailing Spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?account-number=1234567980&begin-date=6/20/2022&sort-order=d&end-Date=7/14/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011"
										},
										{
											"key": "begin-date",
											"value": "6/20/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "7/14/2022"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Get folder contains:\n 1) Get Trade\n 2) Get Trades\n 3) Get Payment Instructions"
				},
				{
					"name": "3. Post FX Payment",
					"item": [
						{
							"name": "fx payment, ad hoc, trade-id w trailing spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"FX payment, Ad-Hoc, Trade-id with Trailing Spaces\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"201 Returned, Payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id2}} \",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for purpose of pmt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id4\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, ad hoc, purpose of payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id4}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for currency trailing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id5\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, ad hoc, sending currency w trailing spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"FX payment, Ad-Hoc, Sending Currency with Trailing Spaces\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"201 Returned, Payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id5}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR \",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for currency leading",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id6\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, ad hoc, sending currency w leading spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"FX payment, Ad-Hoc, Sending Currency with Leading Spaces\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"201 Returned, Payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id6}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \" EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Quote, Market Order - for Connections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Market Order Buy, send to third party\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    let json = pm.response.json()\r",
											"    pm.collectionVariables.set(\"sequential_test_trade_id7\", json.trade_id);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is 200, showing account type as third party\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ThirdParty\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "fx payment, Connections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"{{sequential_test_trade_id7}}\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"test from api\",\r\n    \"sending_currency\": \"EUR\",\r\n    \r\n    \"beneficiary_bank_type\": \"ABA\",\r\n    \"beneficiary_bank_routing_id\": \"256074974\",\r\n    \"beneficiary_bank_name\": \"Navy Fed\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"JacksonVille\",\r\n    \"beneficiary_bank_region\": \"FL\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4. Get Payment instructions",
					"item": [
						{
							"name": "Payment Instructions, standard w trade-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Success Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions+json",
										"description": "paymentinstructions",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions.hateoas+json",
										"description": "paymentinstructions+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/payment/instructions/:trade-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										"instructions",
										":trade-id"
									],
									"variable": [
										{
											"key": "trade-id",
											"value": "{{sequential_test_trade_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Payment Instructions, trade-id w trailing spaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Success Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions+json",
										"description": "paymentinstructions",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions.hateoas+json",
										"description": "paymentinstructions+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/payment/instructions/:trade-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										"instructions",
										":trade-id"
									],
									"variable": [
										{
											"key": "trade-id",
											"value": "{{sequential_test_trade_id}} "
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Internal FX",
			"item": [
				{
					"name": "Internal Quote, indicative only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal FX Quote, indicative only\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing indicative only\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"not authorized to perform\")\r",
									"});\r",
									"\r",
									"pm.test(\"error message not present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote.hateoas+json",
								"type": "text",
								"description": "quote + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder.hateoas+json",
								"type": "text",
								"description": "trade + hateoas",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote+json",
								"description": "quote",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"debit_account_number\": \"4400009902\",\r\n    \"credit_account_number\": \"5091010116\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"debit_amount\": 0,\r\n    \"credit_amount\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Internal Quote, EUR to USD Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal FX - EUR to USD Quote\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    let json = pm.response.json()\r",
									"    pm.collectionVariables.set(\"sequential_test_quote_id7\", json.quote_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing quote_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"quote_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error message not present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote.hateoas+json",
								"type": "text",
								"description": "quote + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder.hateoas+json",
								"type": "text",
								"description": "trade + hateoas",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote+json",
								"description": "quote",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"debit_account_number\": \"1234567980\",\r\n    \"credit_account_number\": \"5091010116\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"debit_amount\": 0,\r\n    \"credit_amount\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Internal Trade, EUR to USD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal Trade - EUR to USD\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    let json = pm.response.json()\r",
									"    pm.collectionVariables.set(\"sequential_test_trade_id10\", json.trade_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing payment_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internaltradeexecution.hateoas+json",
								"type": "text",
								"description": "tradeexecution + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internaltradeexecution+json",
								"description": "tradeexecution",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id7}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/trade",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"trade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trade, EUR to USD Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Trade - EUR to USD Quote, good response\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing payment_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{subscriptionKey}}",
								"type": "text"
							},
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "text"
							},
							{
								"key": "X-Auth-Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Nonce",
								"value": "{{nonce}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Timestamp",
								"value": "{{date}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Version",
								"value": "{{version}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade.hateoas+json",
								"description": "trade hateoas",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/fx/trade/:trade-Id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"trade",
								":trade-Id"
							],
							"variable": [
								{
									"key": "trade-Id",
									"value": "{{sequential_test_trade_id10}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Internal Quote, EUR to USD Market Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal FX - EUR to USD Market Order\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    let json = pm.response.json()\r",
									"    pm.collectionVariables.set(\"sequential_test_trade_id9\", json.trade_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing trade_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"trade_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error message not present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote.hateoas+json",
								"type": "text",
								"description": "quote + hateoas",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder.hateoas+json",
								"type": "text",
								"description": "trade + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote+json",
								"description": "quote",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"debit_account_number\": \"1234567980\",\r\n    \"credit_account_number\": \"5091010001\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"debit_amount\": 0,\r\n    \"credit_amount\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trade, EUR to USD Market Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Trade - EUR to USD Quote, good response\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing payment_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{subscriptionKey}}",
								"type": "text"
							},
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "text"
							},
							{
								"key": "X-Auth-Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Nonce",
								"value": "{{nonce}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Timestamp",
								"value": "{{date}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Version",
								"value": "{{version}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade.hateoas+json",
								"description": "trade hateoas",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/fx/trade/:trade-Id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"trade",
								":trade-Id"
							],
							"variable": [
								{
									"key": "trade-Id",
									"value": "{{sequential_test_trade_id9}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Internal Quote, USD to EUR Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal FX - USD to EUR Quote\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    let json = pm.response.json()\r",
									"    pm.collectionVariables.set(\"sequential_test_quote_id8\", json.quote_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing quote_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"quote_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error message not present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote.hateoas+json",
								"type": "text",
								"description": "quote + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder.hateoas+json",
								"type": "text",
								"description": "trade + hateoas",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote+json",
								"description": "quote",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"debit_account_number\": \"5091010001\",\r\n    \"credit_account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"debit_amount\": 0,\r\n    \"credit_amount\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Internal Trade, USD to EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal Trade, UST to EUR\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    let json = pm.response.json()\r",
									"    pm.collectionVariables.set(\"sequential_test_trade_id11\", json.trade_id);\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internaltradeexecution.hateoas+json",
								"type": "text",
								"description": "tradeexecution + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internaltradeexecution+json",
								"description": "tradeexecution",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"quote_id\": \"{{sequential_test_quote_id8}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/trade",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"trade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trade, USD to EUR Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Trade - USD to EUR Quote\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing payment_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{subscriptionKey}}",
								"type": "text"
							},
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "text"
							},
							{
								"key": "X-Auth-Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Nonce",
								"value": "{{nonce}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Timestamp",
								"value": "{{date}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Version",
								"value": "{{version}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade.hateoas+json",
								"description": "trade hateoas",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/fx/trade/:trade-Id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"trade",
								":trade-Id"
							],
							"variable": [
								{
									"key": "trade-Id",
									"value": "{{sequential_test_trade_id11}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Internal Quote, USD to EUR Market Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Internal Quote, USD to EUR Market Order\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    let json = pm.response.json()\r",
									"    pm.collectionVariables.set(\"sequential_test_trade_id12\", json.trade_id);\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote.hateoas+json",
								"type": "text",
								"description": "quote + hateoas",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder.hateoas+json",
								"type": "text",
								"description": "trade + hateoas"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalquote+json",
								"description": "quote",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.internalmarketorder+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"debit_account_number\": \"5091010001\",\r\n    \"credit_account_number\": \"1234567980\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"debit_amount\": 0,\r\n    \"credit_amount\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/fx/internal/quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"internal",
								"quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trade, USD to EUR Market Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Trade - USD to EUR Market Order\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is 200, showing payment_id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{subscriptionKey}}",
								"type": "text"
							},
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "text"
							},
							{
								"key": "X-Auth-Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Nonce",
								"value": "{{nonce}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Timestamp",
								"value": "{{date}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Version",
								"value": "{{version}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"description": "standard json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade+json",
								"description": "trade",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/vnd.made.trade.hateoas+json",
								"description": "trade hateoas",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/fx/trade/:trade-Id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fx",
								"trade",
								":trade-Id"
							],
							"variable": [
								{
									"key": "trade-Id",
									"value": "{{sequential_test_trade_id12}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET Payment Hide/Show",
			"item": [
				{
					"name": "Hide Show General",
					"item": [
						{
							"name": "Incoming",
							"item": [
								{
									"name": "Rejected Complete - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"no content\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"data not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2J0502GXU9F1X",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Rejected Complete - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"no content\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"data not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2H4546JUV0K3B",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "In Progress (no B to B) - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"no content\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"data not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2J0438AOU76VF",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "In Progress (no B to B) - FED correspondent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"no content\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"data not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09ML5053L0S8FF5",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "M01QM0641CINE74V",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - FED correspondent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"query": [
												{
													"key": null,
													"value": null,
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09SK1300PIU248B",
													"description": "past tries: L08OK38350ZS0WKM, L09790527G9T1ID9, L09SK1300PIU248B, L09SK1250F2U0M5I"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09OD13113YTHSA0",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9, L09NC3224OJT4M4L"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - SWIFT FX",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NC3115INT9TMU",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L08I95644G0N2CYG",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - FED correspondent + acct no match credt ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NM4451FRTINXM ",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NH4852QFSANDR",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - FED acct no match credit id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NI1847ORS42YJ",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete Virtual Account - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09ML5131G9T1BPE",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete Virtual Accoutn - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NI0338INSC1LV",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "In Progress B to B USD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"no content\", function () { //orginally checking for forbidden but that is not trivial to achieve\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"data not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09SM1420H0V4J81",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete B to B USD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2I0957BYV0IC4",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "FX - Trade (draft payment shell for USD credit)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09KH1950RGS5CFM",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Rejected In Progress (wait-return where previous msg status<>complete)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"no content\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"data not present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09SM330885V2J3X",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Outgoing",
							"item": [
								{
									"name": "In Progress - Portal/API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09KH15147IT5FZV",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "In Progress - non Portal/API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NE1150E5T8VZV",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NC0441PNT6EHT",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NE1850EKS3I71",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - SWIFT FX",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NF4641OBSEX3B",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete - SWIFT Correspondent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NF4942KBSF8DJ",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return In Progress - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09DJ48132OT00SZ",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return In Progress - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NG1715RJT68WK",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L08QL10370LT4IC4",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09NG43460QT1D0G",
													"description": "is a return of inbound L09NG4241FETC5KI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return Complete - SWIFT FX",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2I1642EXV597E",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return 2 Complete - FED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09TJ2145K5V5CZZ",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return 2 Complete - SWIFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2I310008V9D93",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Return 2 Complete - SWIFT FX",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2I3348HNV5CGG",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "In Progress B to B USD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09UM3022OLV38UV",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "In Progress B to B non-USD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L0A2I2821H0U5XI7",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete B to B USD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09TK0059P4V2IBF",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9, L09NC1947E7S2AIQ"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete B to B non-USD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09KH4435J0S8SRI",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "FX - auto sent through correspondent bank",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"success with data\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"data present\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"type": "text",
												"value": "{{subscriptionKey}}"
											},
											{
												"key": "Ocp-Apim-Trace",
												"type": "text",
												"value": "true"
											},
											{
												"key": "X-Auth-Signature",
												"type": "text",
												"value": "{{signature}}"
											},
											{
												"key": "X-Auth-Nonce",
												"type": "text",
												"value": "{{nonce}}"
											},
											{
												"key": "X-Auth-Timestamp",
												"type": "text",
												"value": "{{date}}"
											},
											{
												"key": "X-Auth-Version",
												"type": "text",
												"value": "{{version}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/payment/:payment-id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												":payment-id"
											],
											"variable": [
												{
													"key": "payment-id",
													"value": "L09KH1016OATH4XE",
													"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Manual",
					"item": [
						{
							"name": "FCA Outgoing Incomplete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"no content\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"data not present\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "L0A7G13553HY0W2Q",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FCA Internal Transfer, credit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"success with data\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"data present\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "L09KK334199S5T10",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FCA Outgoing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"success with data\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"data present\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "L09NE23008KTB65K",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Outgoing Canceled",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"success with data\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"data present\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "L09NG36396ATE918",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incoming Return Complete - FED Correspondent + no acct match credit id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"success with data\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"data present\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "L09NI183413T81HQ ",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Manual, Own Environment",
					"item": [
						{
							"name": "FCA Internal Transfer, debit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"success with data\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"data present\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "L09KK334199S5T10",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const { v4: uuidv4 } = require('uuid');",
					"",
					"let subscriptionKey = pm.variables.get('subscriptionKey');",
					"let subscriptionGuid = pm.variables.get('subscriptionGuid');",
					"let apiSecret = pm.variables.get('clientSecret');",
					"let ver = pm.variables.get('version');",
					"let tracing = pm.variables.get('tracing');",
					"let utcDate = (new Date()).toISOString();",
					"let nonce = uuidv4();",
					"",
					"let uri = pm.environment.values.substitute(pm.request.url, null, false);",
					"uri = pm.collectionVariables.values.substitute(pm.request.url, null, false) + \"\";",
					"",
					"let uriParts = uri.replace(/#+$/, \"\").split(/\\?(.+)/)",
					"let url = encodeURI(uriParts[0]);",
					"if (uriParts.length > 1) {",
					"    url = url + \"?\" + uriParts[1]",
					"}",
					"",
					"let body = pm.request.body !== undefined ? pm.collectionVariables.values.substitute(pm.environment.values.substitute(pm.request.body, null, false), null, false) : \"\";",
					"let rawMessage = \"made\" + \" \" + subscriptionKey + url + nonce + utcDate + ver + body;",
					"",
					"console.log(\"Raw message: \" + rawMessage)",
					"// Generate HMAC SHA256 or 512 signature",
					"let signature = CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA512(rawMessage, apiSecret));",
					"",
					"if (subscriptionGuid !== undefined) {",
					"    pm.request.headers.upsert({",
					"        key: 'X-made-Subscription-Id',",
					"        value: subscriptionGuid",
					"    });",
					"",
					"",
					"    pm.request.headers.upsert({",
					"        key: 'X-made-Subscription-Name',",
					"        value: \"Postman local test\"",
					"    });",
					"}",
					"",
					"pm.request.headers.upsert({",
					"    key: 'Ocp-Apim-Subscription-Key',",
					"    value: subscriptionKey",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'Ocp-Apim-Trace',",
					"    value: tracing",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Signature',",
					"    value: signature",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Nonce',",
					"    value: nonce",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Timestamp',",
					"    value: utcDate",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Version',",
					"    value: ver",
					"}",
					");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Idempotency-Key",
			"value": ""
		},
		{
			"key": "current_count",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id1",
			"value": ""
		},
		{
			"key": "sequential_test_payment_id",
			"value": ""
		},
		{
			"key": "sequential_test_payment_timestamp",
			"value": ""
		},
		{
			"key": "sequential_test_webhook_id1",
			"value": ""
		},
		{
			"key": "sequential_test_webhook_id2",
			"value": ""
		},
		{
			"key": "sequential_test_webhook_id3",
			"value": ""
		},
		{
			"key": "sequential_test_webhook_id4",
			"value": ""
		},
		{
			"key": "sequential_test_webhook_id5",
			"value": ""
		},
		{
			"key": "sequential_test_webhook_id10",
			"value": ""
		},
		{
			"key": "Idempotency-Key2",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id2",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id3",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id4",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id2",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id3",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id4",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id5",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id6",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id7",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id5",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id8",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id6",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id9",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id7",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id10",
			"value": ""
		},
		{
			"key": "sequential_test_quote_id8",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id11",
			"value": ""
		},
		{
			"key": "sequential_test_trade_id12",
			"value": ""
		}
	]
}