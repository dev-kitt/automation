{
	"info": {
		"_postman_id": "00000000-0000-0000-0000-000000000000",
		"name": "Partner API v3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17221433"
	},
	"item": [
		{
			"name": "FX",
			"item": [
				{
					"name": "Get",
					"item": [
						{
							"name": "Get Trade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade/:trade-Id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade",
										":trade-Id"
									],
									"variable": [
										{
											"key": "trade-Id",
											"value": "265381"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Trades",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.trade.hateoas+json",
										"description": "trade+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/fx/trade?begin-date=6/01/2022&sort-order=d&end-Date=06/30/2022",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980, 1067309011",
											"disabled": true
										},
										{
											"key": "begin-date",
											"value": "6/01/2022"
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "source",
											"value": "2",
											"description": "1 for partner, 2 for portal",
											"disabled": true
										},
										{
											"key": "end-Date",
											"value": "06/30/2022"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Payment Instructions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Success Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions+json",
										"description": "paymentinstructions",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.paymentinstructions.hateoas+json",
										"description": "paymentinstructions+hateoas",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/payment/instructions/:trade-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										"instructions",
										":trade-id"
									],
									"variable": [
										{
											"key": "trade-id",
											"value": "",
											"description": "366004 for inbound instructions"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Get folder contains:\n 1) Get Trade\n 2) Get Trades\n 3) Get Payment Instructions"
				},
				{
					"name": "Post",
					"item": [
						{
							"name": "Post Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.quote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.quote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.marketorder+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_number\": \"5030004773\",\r\n    \"currency_pair\": \"GBP/USD\",\r\n    \"external_account_type\": 2,\r\n    \"is_buy\": true,\r\n    \"dealt_amount\": 1,\r\n    \"counter_amount\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Trade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.tradeexecution.hateoas+json",
										"type": "text",
										"description": "tradeexecution + hateoas"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.tradeexecution+json",
										"description": "tradeexecution",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quote_id\": \"1619622187303\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/trade",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"trade"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.adhocfxpaymentrequest+json",
										"type": "text",
										"description": "adhoc"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.made.fxpaymentrequest+json",
										"type": "text",
										"description": "non adhoc",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment.hateoas+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.fxpayment+json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"trade_id\": \"643803\",\r\n    \"purpose_of_payment\": 1,\r\n    \"memo\": \"TC xxxxx\",\r\n    \"sending_currency\": \"GBP\",\r\n    \r\n    \"beneficiary_bank_type\": \"SWIFT\",\r\n    \"beneficiary_bank_routing_id\": \"COBADEFF\",\r\n    \"beneficiary_bank_name\": \"COMMERZBANK\",\r\n    \"beneficiary_bank_street_address\": \"1111 Sample Dr\",\r\n    \"beneficiary_bank_city\": \"FRANKFURT\",\r\n    \"beneficiary_bank_region\": \"GERMANY\",\r\n    \"beneficiary_bank_country_code\": \"GE\",\r\n    \"beneficiary_bank_account_number\": \"DE89370400440532011000\",\r\n    \"beneficiary_bank_account_is_iban\": true,\r\n\r\n    \"beneficiary_name\": \"J JEN\",\r\n    \"beneficiary_street_address\": \"2222 Sample Dr\",\r\n    \"beneficiary_city\": \"Los Angeles\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"US\",\r\n\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n\r\n    \"external_account_id\": \"5a6aad0b-eaae-4c6b-b971-66f98fcf1a86\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Internal Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.made.internalquote.hateoas+json",
										"type": "text",
										"description": "quote + hateoas",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.internalmarketorder.hateoas+json",
										"type": "text",
										"description": "trade + hateoas"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.internalquote+json",
										"description": "quote",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.internalmarketorder+json",
										"description": "trade",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"debit_account_number\": \"1067309011\",\r\n    \"credit_account_number\": \"5091010001\",\r\n    \"currency_pair\": \"eur/usd\",\r\n    \"debit_amount\": 0,\r\n    \"credit_amount\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/fx/internal/quote",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"internal",
										"quote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Internal Trade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.internaltradeexecution.hateoas+json",
										"type": "text",
										"description": "tradeexecution + hateoas"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.internaltradeexecution+json",
										"description": "tradeexecution",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quote_id\": \"1647927296118\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/fx/internal/trade",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"fx",
										"internal",
										"trade"
									]
								}
							},
							"response": []
						}
					],
					"description": "Post folder contains:\n 1) Post Quote\n 2) Post Trade\n 3) Post FX Payment"
				}
			]
		},
		{
			"name": "Connections",
			"item": [
				{
					"name": "Get",
					"item": [
						{
							"name": "Get Connections",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"description": "standard json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections+json",
										"description": "connections",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.connections.hateoas+json",
										"description": "connections hateoas",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts+json",
										"description": "third party contacts",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.contacts.hateoas+json",
										"description": "third party contacts hateoas",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts+json",
										"description": "owned accounts",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/vnd.made.externalaccounts.hateoas+json",
										"description": "owned accounts hateoas",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/api/connections",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"connections"
									],
									"query": [
										{
											"key": "trade-id",
											"value": "263815",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "EUR",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "account/balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/account/:accountNumber/balance",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"account",
										":accountNumber",
										"balance"
									],
									"variable": [
										{
											"key": "accountNumber",
											"value": "1234567980",
											"type": "string",
											"description": "1045400114, 1234567980, 1003900113, 1018409019"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account/list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/account/list",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"account",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/number/history",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.text()).not.to.include(\"ERRORMSG\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-UniqueId-Version",
										"value": "v3",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/api/account/:account-number/history?sort-order=d",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"account",
										":account-number",
										"history"
									],
									"query": [
										{
											"key": "begin-date",
											"value": "2022-03-31",
											"disabled": true
										},
										{
											"key": "end-date",
											"value": "2022-04-01",
											"disabled": true
										},
										{
											"key": "sort-order",
											"value": "d"
										},
										{
											"key": "is-real-time",
											"value": "false",
											"disabled": true
										},
										{
											"key": "page-number",
											"value": "3",
											"disabled": true
										},
										{
											"key": "page-size",
											"value": "100",
											"disabled": true
										},
										{
											"key": "unique-id",
											"value": "NDQwMDAwOTkwMQk4LzMvMjAyMQkxMC4wMAk5MDczCUwwODNDMzEwMFAwRzJBSjYJIE9VVEdPSU5HIFdJUkUgRkVF",
											"disabled": true
										},
										{
											"key": "payment-id",
											"value": "L09UL2218A9V5SCY",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "account-number",
											"value": "1234567980",
											"description": "1234567980"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account/hold (disabled)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text",
										"description": "924241808aec4f3583975f166f839d4b"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/account/:account-number/hold?application=DD",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"account",
										":account-number",
										"hold"
									],
									"query": [
										{
											"key": "application",
											"value": "DD"
										},
										{
											"key": "transaction-code",
											"value": "HD",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "account-number",
											"value": "1067309011"
										}
									]
								},
								"description": "Get hold information for an account."
							},
							"response": []
						},
						{
							"name": "account/loan/balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/account/:accountNumber/loan/balance",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"account",
										":accountNumber",
										"loan",
										"balance"
									],
									"variable": [
										{
											"key": "accountNumber",
											"value": "2016"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account/cash-manager/balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/account/:accountNumber/cash-manager/balance",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"account",
										":accountNumber",
										"cash-manager",
										"balance"
									],
									"variable": [
										{
											"key": "accountNumber",
											"value": "777777777",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "Get",
					"item": [
						{
							"name": "Get Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
											"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
											"   postman.setEnvironmentVariable('pim', jsonData[0].payment_id);\r",
											"   postman.setEnvironmentVariable('pim_timestamp', jsonData[0].time_stamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment/:payment-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":payment-id"
									],
									"variable": [
										{
											"key": "payment-id",
											"value": "M0CLK1644G423ZV5",
											"description": "L08OK38350ZS0WKM, L09790527G9T1ID9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   //pm.globals.set(\"pim\",  jsonData[0].payment_id);\r",
											"   //pm.globals.set(\"pim_timestamp\",  jsonData[0].time_stamp);\r",
											"   postman.setEnvironmentVariable('pim', jsonData.records[0].payment_id);\r",
											"   postman.setEnvironmentVariable('pim_timestamp', jsonData.records[0].time_stamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{subscriptionKey}}"
									},
									{
										"key": "Ocp-Apim-Trace",
										"type": "text",
										"value": "true"
									},
									{
										"key": "X-Auth-Signature",
										"type": "text",
										"value": "{{signature}}"
									},
									{
										"key": "X-Auth-Nonce",
										"type": "text",
										"value": "{{nonce}}"
									},
									{
										"key": "X-Auth-Timestamp",
										"type": "text",
										"value": "{{date}}"
									},
									{
										"key": "X-Auth-Version",
										"type": "text",
										"value": "{{version}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/payment?account-number=1234567980&begin-date=07/01/2022&end-date=07/30/2022&page-size=100&page-number=1&sort-order=asc",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment"
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980"
										},
										{
											"key": "begin-date",
											"value": "07/01/2022"
										},
										{
											"key": "end-date",
											"value": "07/30/2022"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "page-number",
											"value": "1"
										},
										{
											"key": "sort-order",
											"value": "asc"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post",
					"item": [
						{
							"name": "BCPPayment",
							"item": [
								{
									"name": "BCP Post Payment - 2 Bank",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 2.22,\r\n\t\"originator_account_number\": \"1234567980\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"1234567890\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"John Smith\",\r\n\t\"beneficiary_street_address\": \"222 Weinerschnitzle Lane\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_postal\": \"90210\",\r\n    \"beneficiary_country_code\": \"CA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"021000021\",\r\n\t\"beneficiary_bank_name\": \"JPMorgan Chase Bank\",\r\n\t\"beneficiary_bank_street_address\": \"1111 Polaris Parkway\",\r\n\t\"beneficiary_bank_city\": \"Columbus\",\r\n\t\"beneficiary_bank_region\": \"OH\",\r\n    \"beneficiary_bank_postal\": \"43240\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"Memo line\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment/backup",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												"backup"
											]
										}
									},
									"response": []
								},
								{
									"name": "BCP Post Payment - 3 Bank",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 1,\r\n\t\"originator_account_number\": \"1234567980\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"Hello World\",\r\n\t\"beneficiary_street_address\": \"123 bene address\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n\t\"beneficiary_postal\":\"12345\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"071006486\",\r\n\t\"beneficiary_bank_name\": \"THE PRIVATEBANK AND TRUST COMPANY\",\r\n\t\"beneficiary_bank_street_address\": \"70 W MADISON SUITE 200\",\r\n\t\"beneficiary_bank_city\": \"Chicago\",\r\n\t\"beneficiary_bank_region\": \"IL\",\r\n    \"beneficiary_bank_postal\": \"60602\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"Mic Check\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment/backup",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												"backup"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Post Payment - Book to Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
											"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "22552b15-3402-4401-9b4f-5f3d91a077a6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"amount\": 10.01,\r\n\t\"originator_account_number\": \"{{originator account number}}\",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"{{made account number}}\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"made Counterparty\",\r\n\t\"beneficiary_street_address\": \"123 Rubik's Way\",\r\n\t\"beneficiary_city\": \"Austin\",\r\n    \"beneficiary_region\": \"TX\",\r\n\t\"beneficiary_postal\":\"73301\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Payment - 2 Bank Scenario_domestic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
											"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"amount\": {{enter a value}},\r\n\t\"originator_account_number\": \"1234567980\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"{{enter random #}}\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"hello {{your first name}}\",\r\n\t\"beneficiary_street_address\": \"222 Weinerschnitzle Lane\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n    \"beneficiary_country_code\": \"CA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"322271627\",\r\n\t\"beneficiary_bank_name\": \"JPMorgan Chase Bank\",\r\n\t\"beneficiary_bank_street_address\": \"1111 Polaris Parkway\",\r\n\t\"beneficiary_bank_city\": \"Columbus\",\r\n\t\"beneficiary_bank_region\": \"OH\",\r\n    \"beneficiary_bank_postal\": \"43240\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Payment - 2 Bank Scenario_international",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
											"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"amount\":1.5,\r\n\t\"originator_account_number\": \"5091010115\",\r\n\t\"sending_currency\": \"EUR\",\r\n\t\"beneficiary_bank_account_number\": \"1045464899665\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"Hocus Pocus\",\r\n\t\"beneficiary_street_address\": \"1670 Great Road\",\r\n\t\"beneficiary_city\": \"Providence\",\r\n    \"beneficiary_region\": \"RI\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"beneficiary_bank_type\": \"SWIFT\",\r\n\t\"beneficiary_bank_routing_id\": \"SRLGGB2L\",\r\n\t\"beneficiary_bank_name\": \"Starling Bank Ltd\",\r\n\t\"beneficiary_bank_street_address\": \"3rd Floor, 2 Finsbury Avenue\",\r\n\t\"beneficiary_bank_city\": \"London\",\r\n\t\"beneficiary_bank_region\": \"England\",\r\n    \"beneficiary_bank_postal\": \"EC2M 2PP\",\r\n    \"beneficiary_bank_country_code\": \"GB\",\r\n    \"originator_to_beneficiary_info\": \"Witchery Goods\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Payment - 3 Bank Scenario_domestic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
											"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"amount\": 5,\r\n\t\"originator_account_number\": \"1234567980\",\r\n\t\"sending_currency\": \"USD\",\r\n\t\"beneficiary_bank_account_number\": \"354354566\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n\t\"beneficiary_name\": \"Hello World\",\r\n\t\"beneficiary_street_address\": \"123 bene address\",\r\n\t\"beneficiary_city\": \"San Francisco\",\r\n    \"beneficiary_region\": \"CA\",\r\n\t\"beneficiary_postal\":\"12345\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"beneficiary_bank_type\": \"ABA\",\r\n\t\"beneficiary_bank_routing_id\": \"121042882\",\r\n\t\"beneficiary_bank_name\": \"Wells Fargo\",\r\n\t\"beneficiary_bank_street_address\": \"7011 W MATTISON SUITE 1200\",\r\n\t\"beneficiary_bank_city\": \"LOS ANGELES\",\r\n\t\"beneficiary_bank_region\": \"CA\",\r\n    \"beneficiary_bank_postal\": \"90210\",\r\n    \"beneficiary_bank_country_code\": \"US\",\r\n    \"intermediary_bank_type\":\"ABA\",\r\n\t\"intermediary_bank_routing_id\": \"321171184\",\r\n\t\"intermediary_bank_name\": \"Citibank\",\r\n\t\"intermediary_bank_street_address\": \"250 University Avenue\",\r\n\t\"intermediary_bank_city\": \"Palo Alto\",\r\n\t\"intermediary_bank_region\": \"CA\",\r\n\t\"intermediary_bank_postal\": \"94301\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Payment - 3 Bank Scenario_international",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   pm.globals.set(\"pim\",  jsonData.payment_id);\r",
											"   pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "22552b15-3402-4401-9b4f-5f3d91a076b0",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"amount\": 2,\r\n\t\"originator_account_number\": \"5091010001\",\r\n\t\"sending_currency\": \"EUR\",\r\n\t\"beneficiary_bank_account_number\": \"NL85INGB4031638493\",\r\n    \"beneficiary_bank_account_is_iban\": true,\r\n\t\"beneficiary_name\": \"Goodday Sunshine\",\r\n\t\"beneficiary_street_address\": \"31 Rue Cambon\",\r\n\t\"beneficiary_city\": \"Paris\",\r\n    \"beneficiary_region\": \"France\",\r\n\t\"beneficiary_postal\":\"75001\",\r\n    \"beneficiary_country_code\": \"FR\",\r\n    \"beneficiary_bank_type\": \"SWIFT\",\r\n\t\"beneficiary_bank_routing_id\": \"INGBNL2A\",\r\n\t\"beneficiary_bank_name\": \"ING Bank N.V.\",\r\n\t\"beneficiary_bank_street_address\": \"41 AVENUE DE L'OPERA\",\r\n\t\"beneficiary_bank_city\": \"Paris\",\r\n\t\"beneficiary_bank_region\": \"France\",\r\n    \"beneficiary_bank_postal\": \"75002\",\r\n    \"beneficiary_bank_country_code\": \"Fr\",\r\n    \"intermediary_bank_type\":\"SWIFT\",\r\n\t\"intermediary_bank_routing_id\": \"AIGIUS33\",\r\n\t\"intermediary_bank_name\": \"AIG INTERNATIONAL INC.\",\r\n\t\"intermediary_bank_street_address\": \"50 DANBURY ROAD\",\r\n\t\"intermediary_bank_city\": \"Wilton\",\r\n\t\"intermediary_bank_region\": \"CT\",\r\n\t\"intermediary_bank_postal\": \"06897\",\r\n\t\"intermediary_bank_country_code\": \"US\",\r\n    \"originator_to_beneficiary_info\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/payment",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patch",
					"item": [
						{
							"name": "BCPPayment Patch",
							"item": [
								{
									"name": "BCP Patch Payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"good response\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"payment created\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
													"});\r",
													"\r",
													"pm.test(\"error not message present\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
													"});\r",
													"\r",
													"pm.test(\"PIM is present\", function () {\r",
													"    var jsonData = JSON.parse(responseBody);\r",
													"   //pm.globals.set(\"pim\",  jsonData.payment_id);\r",
													"   //pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
													"});\r",
													"\r",
													"\r",
													"setTimeout(function(){}, [1500]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{subscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "X-Auth-Signature",
												"value": "{{signature}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Nonce",
												"value": "{{nonce}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Timestamp",
												"value": "{{date}}",
												"type": "text"
											},
											{
												"key": "X-Auth-Version",
												"value": "{{version}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Idempotency-Key",
												"value": "07c90cd0-ed56-4727-8e69-db6a37260f51",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"action\": \"approve\",\r\n    \"timestamp\": \"2022-01-19 12:36:37.720\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/api/payment/backup/:mid",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"payment",
												"backup",
												":mid"
											],
											"variable": [
												{
													"key": "mid",
													"value": null
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Patch Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"good response\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"payment created\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
											"});\r",
											"\r",
											"pm.test(\"error not message present\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
											"});\r",
											"\r",
											"pm.test(\"PIM is present\", function () {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"   //pm.globals.set(\"pim\",  jsonData.payment_id);\r",
											"   //pm.globals.set(\"pim_timestamp\",  jsonData.payment_timestamp);\r",
											"});\r",
											"\r",
											"\r",
											"setTimeout(function(){}, [1500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "07c90cd0-ed56-4727-8e69-db6a37260f51",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"\",\r\n    \"timestamp\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/payment/:mid",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"payment",
										":mid"
									],
									"variable": [
										{
											"key": "mid",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Webhook",
			"item": [
				{
					"name": "Get",
					"item": [
						{
							"name": "Get Webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/WebHook/:web-hook-id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web-hook-id"
									],
									"variable": [
										{
											"key": "web-hook-id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Webhooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/webhook/?account-number=1234567980",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"webhook",
										""
									],
									"query": [
										{
											"key": "account-number",
											"value": "1234567980"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post",
					"item": [
						{
							"name": "webhooks/register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"SetWebHookId\", function () {",
											"var result = JSON.parse(responseBody);",
											"pm.environment.set(\"webhookId\", result.WebHookId);    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Account_Number\": \"1234567980\",\r\n  \"Description\": \"Testing Locally running webhook\",\r\n  \"Web_Hook_Url\": \"https://smallgoldpage85.conveyor.cloud\",\r\n  \"Emails\": \"bsearle@made.com\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/WebHook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "webhooks/delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/WebHook/:web_hook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"WebHook",
										":web_hook_id"
									],
									"variable": [
										{
											"key": "web_hook_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Transfer",
			"item": [
				{
					"name": "Post",
					"item": [
						{
							"name": "account/transfer/internal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is created\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Internal Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "6b0e8309-8a07-41bc-a98c-6fdcfcbdae73",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"1067309011\",\r\n  \"currency\": \"USD\",\r\n  \"amount\": 0.01,\r\n  \"account_from_description2\": \"parallel test 1\",\r\n  \"account_to_description2\": \"parallel test 1\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/internal",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"internal"
									]
								}
							},
							"response": []
						},
						{
							"name": "account/transfer/sen",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is created\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Sen Created\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Completed Successfully\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{subscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "X-Auth-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Nonce",
										"value": "{{nonce}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Timestamp",
										"value": "{{date}}",
										"type": "text"
									},
									{
										"key": "X-Auth-Version",
										"value": "{{version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Idempotency-Key",
										"value": "f4d88916-72df-45a6-881e-c318d41004b7",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number_from\": \"1234567980\",\r\n  \"account_number_to\": \"4400009902\",\r\n  \"amount\": 0.01,\r\n  \"currency\": \"USD\",\r\n  \"account_from_description2\": \"hi fam\",\r\n  \"account_to_description2\": \"to desc 2\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/api/transfer/sen",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transfer",
										"sen"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Local auth test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-made-Subscription-Id",
								"value": "{{subscriptionGuid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5072/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5072",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"description": "This is for testing authentication using the newly built authentication service."
		},
		{
			"name": "DVH fgpp testing 2.4",
			"item": [
				{
					"name": "Post Payment - Book to Book 28962",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"good response\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"payment created\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"payment_id\")\r",
									"});\r",
									"\r",
									"pm.test(\"error not message present\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ERRORMSG\");\r",
									"});\r",
									"\r",
									"pm.test(\"PIM is present\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"   pm.environment.set(\"pim\",  jsonData.payment_id);\r",
									"   pm.environment.set(\"pim_timestamp\",  jsonData.payment_timestamp); \r",
									"});\r",
									"\r",
									"\r",
									"setTimeout(function(){}, [1500]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{subscriptionKey}}",
								"type": "text"
							},
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "text"
							},
							{
								"key": "X-Auth-Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Nonce",
								"value": "{{nonce}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Timestamp",
								"value": "{{date}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Version",
								"value": "{{version}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Idempotency-Key",
								"value": "22552b15-3402-4401-9b4f-5f3d91a077a6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"amount\": 0.02,\r\n\t\"originator_account_number\": \"5030004773\",\r\n\t\"sending_currency\": \"USD\",\r\n    \"beneficiary_bank_type\": \"aba\",\r\n    \"beneficiary_bank_routing_id\": \"322286803\",\r\n    \"beneficiary_bank_name\": \"made\", \r\n\t\"beneficiary_bank_account_number\": \"5030004799\",\r\n    \"beneficiary_bank_account_is_iban\": false,\r\n    \"beneficiary_bank_street_address\": \"4250 Executive Square Suite 300\",\r\n\t\"beneficiary_name\": \"TEST made INC\",\r\n\t\"beneficiary_street_address\": \"4250 Executive Square Suite\",\r\n\t\"beneficiary_city\": \"La Jolla\",\r\n    \"beneficiary_region\": \"CA\",\r\n\t\"beneficiary_postal\":\"92037\",\r\n    \"beneficiary_country_code\": \"USA\",\r\n    \"originator_to_beneficiary_info\": \"Test 28962 by DVH\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/payment",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"payment"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const { v4: uuidv4 } = require('uuid');",
					"",
					"let subscriptionKey = pm.variables.get('subscriptionKey');",
					"let subscriptionGuid = pm.variables.get('subscriptionGuid');",
					"let apiSecret = pm.variables.get('clientSecret');",
					"let ver = pm.variables.get('version');",
					"let tracing = pm.variables.get('tracing');",
					"let utcDate = (new Date()).toISOString();",
					"let nonce = uuidv4();",
					"",
					"let uri = pm.environment.values.substitute(pm.request.url, null, false);",
					"uri = pm.collectionVariables.values.substitute(pm.request.url, null, false) + \"\";",
					"",
					"let uriParts = uri.replace(/#+$/, \"\").split(/\\?(.+)/)",
					"let url = encodeURI(uriParts[0]);",
					"if (uriParts.length > 1) {",
					"    url = url + \"?\" + uriParts[1]",
					"}",
					"",
					"let body = pm.request.body !== undefined ? pm.collectionVariables.values.substitute(pm.environment.values.substitute(pm.request.body, null, false), null, false) : \"\";",
					"let rawMessage = \"made\" + \" \" + subscriptionKey + url + nonce + utcDate + ver + body;",
					"",
					"console.log(\"Raw message: \" + rawMessage)",
					"// Generate HMAC SHA256 or 512 signature",
					"let signature = CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA512(rawMessage, apiSecret));",
					"",
					"if (subscriptionGuid !== undefined) {",
					"    pm.request.headers.upsert({",
					"        key: 'X-made-Subscription-Id',",
					"        value: subscriptionGuid",
					"    });",
					"",
					"",
					"    pm.request.headers.upsert({",
					"        key: 'X-made-Subscription-Name',",
					"        value: \"Postman local test\"",
					"    });",
					"}",
					"",
					"pm.request.headers.upsert({",
					"    key: 'Ocp-Apim-Subscription-Key',",
					"    value: subscriptionKey",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'Ocp-Apim-Trace',",
					"    value: tracing",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Signature',",
					"    value: signature",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Nonce',",
					"    value: nonce",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Timestamp',",
					"    value: utcDate",
					"}",
					");",
					"pm.request.headers.upsert({",
					"    key: 'X-Auth-Version',",
					"    value: ver",
					"}",
					");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}